{"ast":null,"code":"var _jsxFileName = \"/home/juan/Desktop/mern-project/frontend/src/users/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/UIElements/Card\";\nimport Button from \"../../shared/FormElements/Button\";\nimport Input from \"../../shared/FormElements/Input\";\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validator\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const swtichModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'aplication/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        console.log(responseData);\n        setIsLoading(false);\n        auth.login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || 'Something went wrong');\n      }\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverLay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: swtichModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"M6qFJ4XbXNhSRa0BG5N0Z2X5CtQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Button","Input","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","setIsLoading","error","setError","formState","inputHandler","setFormData","email","value","isValid","password","swtichModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","console","log","login","err","errorHandler"],"sources":["/home/juan/Desktop/mern-project/frontend/src/users/pages/Auth.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\n\nimport Card from \"../../shared/UIElements/Card\";\nimport Button from \"../../shared/FormElements/Button\";\nimport Input from \"../../shared/FormElements/Input\";\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\"\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\"\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE  } from \"../../shared/util/validator\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './Auth.css'\n\n\nconst Auth = () => {\n    const auth = useContext(AuthContext)\n    const [isLoginMode, setIsLoginMode] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState()\n\n    const [formState, inputHandler, setFormData] = useForm({\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n    }, \n    false\n)\n\nconst swtichModeHandler = () => {\n    if(!isLoginMode) {\n        setFormData(\n        {\n            ...formState.inputs,\n            name:  undefined\n        }, \n        formState.inputs.email.isValid && formState.inputs.password.isValid)\n    } else {\n        setFormData({\n            ...formState.inputs,\n            name: {\n                value: '',\n                isValid: false\n            }\n        }, false)\n    }\n    setIsLoginMode(prevMode => !prevMode)\n}\n\nconst authSubmitHandler = async event => {\n    event.preventDefault()\n    \n    if(isLoginMode) {\n     } else {\n         try {\n            setIsLoading(true)\n            const response = await fetch('http://localhost:5000/api/users/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'aplication/json'\n                },\n                body: JSON.stringify({\n                    name: formState.inputs.name.value,\n                    email: formState.inputs.email.value,\n                    password: formState.inputs.password.value\n                })\n            })\n\n            const responseData = await response.json()\n            \n            if(!response.ok) {\n                throw new Error (responseData.message)\n            }\n            console.log(responseData)\n            setIsLoading(false)\n            auth.login()\n        } catch (err) {\n            setIsLoading(false)\n            setError(err.message || 'Something went wrong')\n        }\n    }   \n     \n}\n\nconst errorHandler = () => {\n    setError(null)\n}\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler} />\n            <Card className='authentication'>\n                {isLoading && <LoadingSpinner asOverLay />}\n                <h2>Login Required</h2>\n                <hr />\n                <form onSubmit={authSubmitHandler}>\n                    {!isLoginMode && (<Input \n                    element=\"input\" \n                    id=\"name\" \n                    type=\"text\" \n                    label=\"Your name\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText=\"Please enter a name\"\n                    onInput={inputHandler}\n                    />\n                    )}\n                    <Input \n                    element=\"input\" \n                    id=\"email\" \n                    type=\"email\" \n                    label=\"E-mail\" \n                    validators={[VALIDATOR_EMAIL()]} \n                    errorText=\"Please enter a valid email\"\n                    onInput={inputHandler}\n                    />\n                    \n                    <Input \n                    element=\"input\" \n                    id=\"password\" \n                    type=\"password\" \n                    label=\"Password\" \n                    validators={[VALIDATOR_MINLENGTH(5)]} \n                    errorText=\"Please enter a valid password, at least 5 characters\"\n                    onInput={inputHandler}\n                    />\n                    \n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                    </Button> \n                </form>\n                <Button inverse onClick={swtichModeHandler}>\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button> \n                \n            </Card>\n       </React.Fragment>\n    )\n}\n\nexport default Auth\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}