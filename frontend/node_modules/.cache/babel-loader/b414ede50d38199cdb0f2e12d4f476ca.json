{"ast":null,"code":"var _jsxFileName = \"/home/juan/Desktop/mern-project/frontend/src/users/pages/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\";\nimport UsersList from '../components/UsersList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/users');\n        const responseData = response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"Q4vun3yn22XWADhJ+SI1yd+xh60=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","ErrorModal","LoadingSpinner","UsersList","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","Error","message","users","err","errorHandler"],"sources":["/home/juan/Desktop/mern-project/frontend/src/users/pages/Users.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\"\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\"\nimport UsersList from '../components/UsersList';\n\n\nconst Users = () => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState()\n    const [loadedUsers, setLoadedUsers] = useState()\n\n   useEffect(() => {\n       const sendRequest = async () => {\n           setIsLoading(true)\n           try {\n            const response = await fetch('http://localhost:5000/api/users')\n\n            const responseData = response.json()\n\n            if(!response.ok) {\n                throw new Error (responseData.message)\n            }\n            setLoadedUsers(responseData.users)\n            \n           } catch (err) {\n               setError(err.message)\n           }\n        setIsLoading(false)  \n       }\n       sendRequest()\n   }, [])\n\n   const errorHandler = () => {\n       setError(null)\n   }\n\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler} />\n            {isLoading && (<div className=\"center\">\n                <LoadingSpinner/>\n            </div>)}    \n            {!isLoading && loadedUsers && <UsersList  items={loadedUsers} />}\n       </React.Fragment>\n    )\n}\n\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEDD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,YAAY;MAC5BL,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACH,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QAEA,MAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAT,EAArB;;QAEA,IAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;UACb,MAAM,IAAIC,KAAJ,CAAWH,YAAY,CAACI,OAAxB,CAAN;QACH;;QACDR,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;MAEA,CAVD,CAUE,OAAOC,GAAP,EAAY;QACVZ,QAAQ,CAACY,GAAG,CAACF,OAAL,CAAR;MACH;;MACJZ,YAAY,CAAC,KAAD,CAAZ;IACA,CAhBD;;IAiBAK,WAAW;EACd,CAnBQ,EAmBN,EAnBM,CAAT;;EAqBA,MAAMU,YAAY,GAAG,MAAM;IACvBb,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAKC,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,UAAD;MAAY,KAAK,EAAED,KAAnB;MAA0B,OAAO,EAAEc;IAAnC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKhB,SAAS,iBAAK;MAAK,SAAS,EAAC,QAAf;MAAA,uBACX,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADW;MAAA;MAAA;MAAA;IAAA,QAFnB,EAKK,CAACA,SAAD,IAAcI,WAAd,iBAA6B,QAAC,SAAD;MAAY,KAAK,EAAEA;IAAnB;MAAA;MAAA;MAAA;IAAA,QALlC;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAxCD;;GAAML,K;;KAAAA,K;AA2CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}