{"ast":null,"code":"var _jsxFileName = \"/home/juan/Desktop/mern-project/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/FormElements/Input\";\nimport Button from \"../../shared/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validator\";\nimport './NewPlace.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State',\n  description: 'Great building',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/1/10/Empire_State_Building_%28aerial_view%29.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State',\n  description: 'Great building',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/1/10/Empire_State_Building_%28aerial_view%29.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  _s();\n\n  const placeId = useParams().placeId;\n  const identifiedPlaces = DUMMY_PLACES.find(p => p.id === placeId);\n\n  if (!identifiedPlaces) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not find place!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please  enter a valid title\",\n      onInput: () => {},\n      value: identifiedPlaces.title,\n      Valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please  enter a valid description (at least 5 characters).\",\n      onInput: () => {},\n      value: identifiedPlaces.title,\n      Valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: true,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePlace, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlaces","find","p"],"sources":["/home/juan/Desktop/mern-project/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/FormElements/Input\";\nimport Button from \"../../shared/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validator\";\nimport './NewPlace.css'\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Empire State',\n        description: 'Great building',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/1/10/Empire_State_Building_%28aerial_view%29.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Empire State',\n        description: 'Great building',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/1/10/Empire_State_Building_%28aerial_view%29.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n]\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const identifiedPlaces = DUMMY_PLACES.find(p => p.id === placeId);\n\n    if(!identifiedPlaces) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        )\n    }\n\n    return (\n        <form className=\"place-form\">\n            <Input \n                id='title'\n                element=\"input\" \n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText='Please  enter a valid title' \n                onInput={() => {}}\n                value={identifiedPlaces.title}\n                Valid={true}\n            />\n            <Input \n                id='description'\n                element=\"textarea\" \n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(5)] }\n                errorText='Please  enter a valid description (at least 5 characters).' \n                onInput={() => {}}\n                value={identifiedPlaces.title}\n                Valid={true}\n            />\n            <Button type=\"submit\" disabled={true}>\n                ADD PLACE\n            </Button>\n        </form>\n    )\n}\n\nexport default UpdatePlace\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,6BAAvD;AACA,OAAO,gBAAP;;AAEA,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,IADR;EAEIC,KAAK,EAAE,cAFX;EAGIC,WAAW,EAAE,gBAHjB;EAIIC,QAAQ,EAAE,iGAJd;EAKIC,OAAO,EAAE,kCALb;EAMIC,QAAQ,EAAE;IACNC,GAAG,EAAE,UADC;IAENC,GAAG,EAAE,CAAC;EAFA,CANd;EAUIC,OAAO,EAAE;AAVb,CADiB,EAajB;EACIR,EAAE,EAAE,IADR;EAEIC,KAAK,EAAE,cAFX;EAGIC,WAAW,EAAE,gBAHjB;EAIIC,QAAQ,EAAE,iGAJd;EAKIC,OAAO,EAAE,kCALb;EAMIC,QAAQ,EAAE;IACNC,GAAG,EAAE,UADC;IAENC,GAAG,EAAE,CAAC;EAFA,CANd;EAUIC,OAAO,EAAE;AAVb,CAbiB,CAArB;;AA2BA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,OAAO,GAAGhB,SAAS,GAAGgB,OAA5B;EAEA,MAAMC,gBAAgB,GAAGZ,YAAY,CAACa,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACb,EAAF,KAASU,OAAhC,CAAzB;;EAEA,IAAG,CAACC,gBAAJ,EAAsB;IAClB,oBACI;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,oBACI;IAAM,SAAS,EAAC,YAAhB;IAAA,wBACI,QAAC,KAAD;MACI,EAAE,EAAC,OADP;MAEI,OAAO,EAAC,OAFZ;MAGI,KAAK,EAAC,OAHV;MAII,UAAU,EAAE,CAACd,iBAAiB,EAAlB,CAJhB;MAKI,SAAS,EAAC,6BALd;MAMI,OAAO,EAAE,MAAM,CAAE,CANrB;MAOI,KAAK,EAAEc,gBAAgB,CAACV,KAP5B;MAQI,KAAK,EAAE;IARX;MAAA;MAAA;MAAA;IAAA,QADJ,eAWI,QAAC,KAAD;MACI,EAAE,EAAC,aADP;MAEI,OAAO,EAAC,UAFZ;MAGI,KAAK,EAAC,aAHV;MAII,UAAU,EAAE,CAACH,mBAAmB,CAAC,CAAD,CAApB,CAJhB;MAKI,SAAS,EAAC,4DALd;MAMI,OAAO,EAAE,MAAM,CAAE,CANrB;MAOI,KAAK,EAAEa,gBAAgB,CAACV,KAP5B;MAQI,KAAK,EAAE;IARX;MAAA;MAAA;MAAA;IAAA,QAXJ,eAqBI,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,QAAQ,EAAE,IAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH,CAxCD;;GAAMQ,W;UACcf,S;;;KADde,W;AA0CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}